<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chineseivy.dao.MarketMapper">
  <resultMap id="BaseResultMap" type="com.chineseivy.bean.Market">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="markId" jdbcType="INTEGER" property="markid" />
    <result column="marketTime" jdbcType="TIMESTAMP" property="markettime" />
    <result column="marketStarTime" jdbcType="TIMESTAMP" property="marketstartime" />
    <result column="marketEndTime" jdbcType="TIMESTAMP" property="marketendtime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.chineseivy.bean.Market">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="advice" jdbcType="LONGVARCHAR" property="advice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    markId, marketTime, marketStarTime, marketEndTime
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    advice
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.chineseivy.bean.MarketExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_market
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.chineseivy.bean.MarketExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_market
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_market
    where markId = #{markid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_market
    where markId = #{markid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.chineseivy.bean.MarketExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_market
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chineseivy.bean.Market">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_market (markId, marketTime, marketStarTime, 
      marketEndTime, advice)
    values (#{markid,jdbcType=INTEGER}, #{markettime,jdbcType=TIMESTAMP}, #{marketstartime,jdbcType=TIMESTAMP}, 
      #{marketendtime,jdbcType=TIMESTAMP}, #{advice,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.chineseivy.bean.Market">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_market
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="markid != null">
        markId,
      </if>
      <if test="markettime != null">
        marketTime,
      </if>
      <if test="marketstartime != null">
        marketStarTime,
      </if>
      <if test="marketendtime != null">
        marketEndTime,
      </if>
      <if test="advice != null">
        advice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="markid != null">
        #{markid,jdbcType=INTEGER},
      </if>
      <if test="markettime != null">
        #{markettime,jdbcType=TIMESTAMP},
      </if>
      <if test="marketstartime != null">
        #{marketstartime,jdbcType=TIMESTAMP},
      </if>
      <if test="marketendtime != null">
        #{marketendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="advice != null">
        #{advice,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chineseivy.bean.MarketExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from t_market
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_market
    <set>
      <if test="record.markid != null">
        markId = #{record.markid,jdbcType=INTEGER},
      </if>
      <if test="record.markettime != null">
        marketTime = #{record.markettime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.marketstartime != null">
        marketStarTime = #{record.marketstartime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.marketendtime != null">
        marketEndTime = #{record.marketendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.advice != null">
        advice = #{record.advice,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_market
    set markId = #{record.markid,jdbcType=INTEGER},
      marketTime = #{record.markettime,jdbcType=TIMESTAMP},
      marketStarTime = #{record.marketstartime,jdbcType=TIMESTAMP},
      marketEndTime = #{record.marketendtime,jdbcType=TIMESTAMP},
      advice = #{record.advice,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_market
    set markId = #{record.markid,jdbcType=INTEGER},
      marketTime = #{record.markettime,jdbcType=TIMESTAMP},
      marketStarTime = #{record.marketstartime,jdbcType=TIMESTAMP},
      marketEndTime = #{record.marketendtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chineseivy.bean.Market">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_market
    <set>
      <if test="markettime != null">
        marketTime = #{markettime,jdbcType=TIMESTAMP},
      </if>
      <if test="marketstartime != null">
        marketStarTime = #{marketstartime,jdbcType=TIMESTAMP},
      </if>
      <if test="marketendtime != null">
        marketEndTime = #{marketendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="advice != null">
        advice = #{advice,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where markId = #{markid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.chineseivy.bean.Market">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_market
    set marketTime = #{markettime,jdbcType=TIMESTAMP},
      marketStarTime = #{marketstartime,jdbcType=TIMESTAMP},
      marketEndTime = #{marketendtime,jdbcType=TIMESTAMP},
      advice = #{advice,jdbcType=LONGVARCHAR}
    where markId = #{markid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chineseivy.bean.Market">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_market
    set marketTime = #{markettime,jdbcType=TIMESTAMP},
      marketStarTime = #{marketstartime,jdbcType=TIMESTAMP},
      marketEndTime = #{marketendtime,jdbcType=TIMESTAMP}
    where markId = #{markid,jdbcType=INTEGER}
  </update>
</mapper>