package com.chineseivy.bean;

import java.util.ArrayList;
import java.util.List;

public class CategoriesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_categories
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_categories
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_categories
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    private Integer limit;

    private Integer offset;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_categories
     *
     * @mbg.generated
     */
    public CategoriesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_categories
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_categories
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_categories
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_categories
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_categories
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_categories
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_categories
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_categories
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_categories
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_categories
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public Integer getLimit() {
        return limit;
    }

    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    public Integer getOffset() {
        return offset;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_categories
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCategoriesidIsNull() {
            addCriterion("categoriesId is null");
            return (Criteria) this;
        }

        public Criteria andCategoriesidIsNotNull() {
            addCriterion("categoriesId is not null");
            return (Criteria) this;
        }

        public Criteria andCategoriesidEqualTo(Integer value) {
            addCriterion("categoriesId =", value, "categoriesid");
            return (Criteria) this;
        }

        public Criteria andCategoriesidNotEqualTo(Integer value) {
            addCriterion("categoriesId <>", value, "categoriesid");
            return (Criteria) this;
        }

        public Criteria andCategoriesidGreaterThan(Integer value) {
            addCriterion("categoriesId >", value, "categoriesid");
            return (Criteria) this;
        }

        public Criteria andCategoriesidGreaterThanOrEqualTo(Integer value) {
            addCriterion("categoriesId >=", value, "categoriesid");
            return (Criteria) this;
        }

        public Criteria andCategoriesidLessThan(Integer value) {
            addCriterion("categoriesId <", value, "categoriesid");
            return (Criteria) this;
        }

        public Criteria andCategoriesidLessThanOrEqualTo(Integer value) {
            addCriterion("categoriesId <=", value, "categoriesid");
            return (Criteria) this;
        }

        public Criteria andCategoriesidIn(List<Integer> values) {
            addCriterion("categoriesId in", values, "categoriesid");
            return (Criteria) this;
        }

        public Criteria andCategoriesidNotIn(List<Integer> values) {
            addCriterion("categoriesId not in", values, "categoriesid");
            return (Criteria) this;
        }

        public Criteria andCategoriesidBetween(Integer value1, Integer value2) {
            addCriterion("categoriesId between", value1, value2, "categoriesid");
            return (Criteria) this;
        }

        public Criteria andCategoriesidNotBetween(Integer value1, Integer value2) {
            addCriterion("categoriesId not between", value1, value2, "categoriesid");
            return (Criteria) this;
        }

        public Criteria andCategoriesnameIsNull() {
            addCriterion("categoriesName is null");
            return (Criteria) this;
        }

        public Criteria andCategoriesnameIsNotNull() {
            addCriterion("categoriesName is not null");
            return (Criteria) this;
        }

        public Criteria andCategoriesnameEqualTo(String value) {
            addCriterion("categoriesName =", value, "categoriesname");
            return (Criteria) this;
        }

        public Criteria andCategoriesnameNotEqualTo(String value) {
            addCriterion("categoriesName <>", value, "categoriesname");
            return (Criteria) this;
        }

        public Criteria andCategoriesnameGreaterThan(String value) {
            addCriterion("categoriesName >", value, "categoriesname");
            return (Criteria) this;
        }

        public Criteria andCategoriesnameGreaterThanOrEqualTo(String value) {
            addCriterion("categoriesName >=", value, "categoriesname");
            return (Criteria) this;
        }

        public Criteria andCategoriesnameLessThan(String value) {
            addCriterion("categoriesName <", value, "categoriesname");
            return (Criteria) this;
        }

        public Criteria andCategoriesnameLessThanOrEqualTo(String value) {
            addCriterion("categoriesName <=", value, "categoriesname");
            return (Criteria) this;
        }

        public Criteria andCategoriesnameLike(String value) {
            addCriterion("categoriesName like", value, "categoriesname");
            return (Criteria) this;
        }

        public Criteria andCategoriesnameNotLike(String value) {
            addCriterion("categoriesName not like", value, "categoriesname");
            return (Criteria) this;
        }

        public Criteria andCategoriesnameIn(List<String> values) {
            addCriterion("categoriesName in", values, "categoriesname");
            return (Criteria) this;
        }

        public Criteria andCategoriesnameNotIn(List<String> values) {
            addCriterion("categoriesName not in", values, "categoriesname");
            return (Criteria) this;
        }

        public Criteria andCategoriesnameBetween(String value1, String value2) {
            addCriterion("categoriesName between", value1, value2, "categoriesname");
            return (Criteria) this;
        }

        public Criteria andCategoriesnameNotBetween(String value1, String value2) {
            addCriterion("categoriesName not between", value1, value2, "categoriesname");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_categories
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_categories
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}