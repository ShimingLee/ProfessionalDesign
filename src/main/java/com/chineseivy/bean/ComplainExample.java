package com.chineseivy.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ComplainExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_complain
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_complain
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_complain
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    private Integer limit;

    private Integer offset;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_complain
     *
     * @mbg.generated
     */
    public ComplainExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_complain
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_complain
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_complain
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_complain
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_complain
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_complain
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_complain
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_complain
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_complain
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_complain
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public Integer getLimit() {
        return limit;
    }

    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    public Integer getOffset() {
        return offset;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_complain
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andComplainidIsNull() {
            addCriterion("complainId is null");
            return (Criteria) this;
        }

        public Criteria andComplainidIsNotNull() {
            addCriterion("complainId is not null");
            return (Criteria) this;
        }

        public Criteria andComplainidEqualTo(Integer value) {
            addCriterion("complainId =", value, "complainid");
            return (Criteria) this;
        }

        public Criteria andComplainidNotEqualTo(Integer value) {
            addCriterion("complainId <>", value, "complainid");
            return (Criteria) this;
        }

        public Criteria andComplainidGreaterThan(Integer value) {
            addCriterion("complainId >", value, "complainid");
            return (Criteria) this;
        }

        public Criteria andComplainidGreaterThanOrEqualTo(Integer value) {
            addCriterion("complainId >=", value, "complainid");
            return (Criteria) this;
        }

        public Criteria andComplainidLessThan(Integer value) {
            addCriterion("complainId <", value, "complainid");
            return (Criteria) this;
        }

        public Criteria andComplainidLessThanOrEqualTo(Integer value) {
            addCriterion("complainId <=", value, "complainid");
            return (Criteria) this;
        }

        public Criteria andComplainidIn(List<Integer> values) {
            addCriterion("complainId in", values, "complainid");
            return (Criteria) this;
        }

        public Criteria andComplainidNotIn(List<Integer> values) {
            addCriterion("complainId not in", values, "complainid");
            return (Criteria) this;
        }

        public Criteria andComplainidBetween(Integer value1, Integer value2) {
            addCriterion("complainId between", value1, value2, "complainid");
            return (Criteria) this;
        }

        public Criteria andComplainidNotBetween(Integer value1, Integer value2) {
            addCriterion("complainId not between", value1, value2, "complainid");
            return (Criteria) this;
        }

        public Criteria andOrderidIsNull() {
            addCriterion("orderId is null");
            return (Criteria) this;
        }

        public Criteria andOrderidIsNotNull() {
            addCriterion("orderId is not null");
            return (Criteria) this;
        }

        public Criteria andOrderidEqualTo(Integer value) {
            addCriterion("orderId =", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidNotEqualTo(Integer value) {
            addCriterion("orderId <>", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidGreaterThan(Integer value) {
            addCriterion("orderId >", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidGreaterThanOrEqualTo(Integer value) {
            addCriterion("orderId >=", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidLessThan(Integer value) {
            addCriterion("orderId <", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidLessThanOrEqualTo(Integer value) {
            addCriterion("orderId <=", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidIn(List<Integer> values) {
            addCriterion("orderId in", values, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidNotIn(List<Integer> values) {
            addCriterion("orderId not in", values, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidBetween(Integer value1, Integer value2) {
            addCriterion("orderId between", value1, value2, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidNotBetween(Integer value1, Integer value2) {
            addCriterion("orderId not between", value1, value2, "orderid");
            return (Criteria) this;
        }

        public Criteria andComplainreasonIsNull() {
            addCriterion("complainReason is null");
            return (Criteria) this;
        }

        public Criteria andComplainreasonIsNotNull() {
            addCriterion("complainReason is not null");
            return (Criteria) this;
        }

        public Criteria andComplainreasonEqualTo(String value) {
            addCriterion("complainReason =", value, "complainreason");
            return (Criteria) this;
        }

        public Criteria andComplainreasonNotEqualTo(String value) {
            addCriterion("complainReason <>", value, "complainreason");
            return (Criteria) this;
        }

        public Criteria andComplainreasonGreaterThan(String value) {
            addCriterion("complainReason >", value, "complainreason");
            return (Criteria) this;
        }

        public Criteria andComplainreasonGreaterThanOrEqualTo(String value) {
            addCriterion("complainReason >=", value, "complainreason");
            return (Criteria) this;
        }

        public Criteria andComplainreasonLessThan(String value) {
            addCriterion("complainReason <", value, "complainreason");
            return (Criteria) this;
        }

        public Criteria andComplainreasonLessThanOrEqualTo(String value) {
            addCriterion("complainReason <=", value, "complainreason");
            return (Criteria) this;
        }

        public Criteria andComplainreasonLike(String value) {
            addCriterion("complainReason like", value, "complainreason");
            return (Criteria) this;
        }

        public Criteria andComplainreasonNotLike(String value) {
            addCriterion("complainReason not like", value, "complainreason");
            return (Criteria) this;
        }

        public Criteria andComplainreasonIn(List<String> values) {
            addCriterion("complainReason in", values, "complainreason");
            return (Criteria) this;
        }

        public Criteria andComplainreasonNotIn(List<String> values) {
            addCriterion("complainReason not in", values, "complainreason");
            return (Criteria) this;
        }

        public Criteria andComplainreasonBetween(String value1, String value2) {
            addCriterion("complainReason between", value1, value2, "complainreason");
            return (Criteria) this;
        }

        public Criteria andComplainreasonNotBetween(String value1, String value2) {
            addCriterion("complainReason not between", value1, value2, "complainreason");
            return (Criteria) this;
        }

        public Criteria andComplainimageIsNull() {
            addCriterion("complainImage is null");
            return (Criteria) this;
        }

        public Criteria andComplainimageIsNotNull() {
            addCriterion("complainImage is not null");
            return (Criteria) this;
        }

        public Criteria andComplainimageEqualTo(String value) {
            addCriterion("complainImage =", value, "complainimage");
            return (Criteria) this;
        }

        public Criteria andComplainimageNotEqualTo(String value) {
            addCriterion("complainImage <>", value, "complainimage");
            return (Criteria) this;
        }

        public Criteria andComplainimageGreaterThan(String value) {
            addCriterion("complainImage >", value, "complainimage");
            return (Criteria) this;
        }

        public Criteria andComplainimageGreaterThanOrEqualTo(String value) {
            addCriterion("complainImage >=", value, "complainimage");
            return (Criteria) this;
        }

        public Criteria andComplainimageLessThan(String value) {
            addCriterion("complainImage <", value, "complainimage");
            return (Criteria) this;
        }

        public Criteria andComplainimageLessThanOrEqualTo(String value) {
            addCriterion("complainImage <=", value, "complainimage");
            return (Criteria) this;
        }

        public Criteria andComplainimageLike(String value) {
            addCriterion("complainImage like", value, "complainimage");
            return (Criteria) this;
        }

        public Criteria andComplainimageNotLike(String value) {
            addCriterion("complainImage not like", value, "complainimage");
            return (Criteria) this;
        }

        public Criteria andComplainimageIn(List<String> values) {
            addCriterion("complainImage in", values, "complainimage");
            return (Criteria) this;
        }

        public Criteria andComplainimageNotIn(List<String> values) {
            addCriterion("complainImage not in", values, "complainimage");
            return (Criteria) this;
        }

        public Criteria andComplainimageBetween(String value1, String value2) {
            addCriterion("complainImage between", value1, value2, "complainimage");
            return (Criteria) this;
        }

        public Criteria andComplainimageNotBetween(String value1, String value2) {
            addCriterion("complainImage not between", value1, value2, "complainimage");
            return (Criteria) this;
        }

        public Criteria andComplaintimeIsNull() {
            addCriterion("complainTime is null");
            return (Criteria) this;
        }

        public Criteria andComplaintimeIsNotNull() {
            addCriterion("complainTime is not null");
            return (Criteria) this;
        }

        public Criteria andComplaintimeEqualTo(Date value) {
            addCriterion("complainTime =", value, "complaintime");
            return (Criteria) this;
        }

        public Criteria andComplaintimeNotEqualTo(Date value) {
            addCriterion("complainTime <>", value, "complaintime");
            return (Criteria) this;
        }

        public Criteria andComplaintimeGreaterThan(Date value) {
            addCriterion("complainTime >", value, "complaintime");
            return (Criteria) this;
        }

        public Criteria andComplaintimeGreaterThanOrEqualTo(Date value) {
            addCriterion("complainTime >=", value, "complaintime");
            return (Criteria) this;
        }

        public Criteria andComplaintimeLessThan(Date value) {
            addCriterion("complainTime <", value, "complaintime");
            return (Criteria) this;
        }

        public Criteria andComplaintimeLessThanOrEqualTo(Date value) {
            addCriterion("complainTime <=", value, "complaintime");
            return (Criteria) this;
        }

        public Criteria andComplaintimeIn(List<Date> values) {
            addCriterion("complainTime in", values, "complaintime");
            return (Criteria) this;
        }

        public Criteria andComplaintimeNotIn(List<Date> values) {
            addCriterion("complainTime not in", values, "complaintime");
            return (Criteria) this;
        }

        public Criteria andComplaintimeBetween(Date value1, Date value2) {
            addCriterion("complainTime between", value1, value2, "complaintime");
            return (Criteria) this;
        }

        public Criteria andComplaintimeNotBetween(Date value1, Date value2) {
            addCriterion("complainTime not between", value1, value2, "complaintime");
            return (Criteria) this;
        }

        public Criteria andComplainreplyIsNull() {
            addCriterion("complainReply is null");
            return (Criteria) this;
        }

        public Criteria andComplainreplyIsNotNull() {
            addCriterion("complainReply is not null");
            return (Criteria) this;
        }

        public Criteria andComplainreplyEqualTo(String value) {
            addCriterion("complainReply =", value, "complainreply");
            return (Criteria) this;
        }

        public Criteria andComplainreplyNotEqualTo(String value) {
            addCriterion("complainReply <>", value, "complainreply");
            return (Criteria) this;
        }

        public Criteria andComplainreplyGreaterThan(String value) {
            addCriterion("complainReply >", value, "complainreply");
            return (Criteria) this;
        }

        public Criteria andComplainreplyGreaterThanOrEqualTo(String value) {
            addCriterion("complainReply >=", value, "complainreply");
            return (Criteria) this;
        }

        public Criteria andComplainreplyLessThan(String value) {
            addCriterion("complainReply <", value, "complainreply");
            return (Criteria) this;
        }

        public Criteria andComplainreplyLessThanOrEqualTo(String value) {
            addCriterion("complainReply <=", value, "complainreply");
            return (Criteria) this;
        }

        public Criteria andComplainreplyLike(String value) {
            addCriterion("complainReply like", value, "complainreply");
            return (Criteria) this;
        }

        public Criteria andComplainreplyNotLike(String value) {
            addCriterion("complainReply not like", value, "complainreply");
            return (Criteria) this;
        }

        public Criteria andComplainreplyIn(List<String> values) {
            addCriterion("complainReply in", values, "complainreply");
            return (Criteria) this;
        }

        public Criteria andComplainreplyNotIn(List<String> values) {
            addCriterion("complainReply not in", values, "complainreply");
            return (Criteria) this;
        }

        public Criteria andComplainreplyBetween(String value1, String value2) {
            addCriterion("complainReply between", value1, value2, "complainreply");
            return (Criteria) this;
        }

        public Criteria andComplainreplyNotBetween(String value1, String value2) {
            addCriterion("complainReply not between", value1, value2, "complainreply");
            return (Criteria) this;
        }

        public Criteria andReplytimeIsNull() {
            addCriterion("replyTime is null");
            return (Criteria) this;
        }

        public Criteria andReplytimeIsNotNull() {
            addCriterion("replyTime is not null");
            return (Criteria) this;
        }

        public Criteria andReplytimeEqualTo(Date value) {
            addCriterion("replyTime =", value, "replytime");
            return (Criteria) this;
        }

        public Criteria andReplytimeNotEqualTo(Date value) {
            addCriterion("replyTime <>", value, "replytime");
            return (Criteria) this;
        }

        public Criteria andReplytimeGreaterThan(Date value) {
            addCriterion("replyTime >", value, "replytime");
            return (Criteria) this;
        }

        public Criteria andReplytimeGreaterThanOrEqualTo(Date value) {
            addCriterion("replyTime >=", value, "replytime");
            return (Criteria) this;
        }

        public Criteria andReplytimeLessThan(Date value) {
            addCriterion("replyTime <", value, "replytime");
            return (Criteria) this;
        }

        public Criteria andReplytimeLessThanOrEqualTo(Date value) {
            addCriterion("replyTime <=", value, "replytime");
            return (Criteria) this;
        }

        public Criteria andReplytimeIn(List<Date> values) {
            addCriterion("replyTime in", values, "replytime");
            return (Criteria) this;
        }

        public Criteria andReplytimeNotIn(List<Date> values) {
            addCriterion("replyTime not in", values, "replytime");
            return (Criteria) this;
        }

        public Criteria andReplytimeBetween(Date value1, Date value2) {
            addCriterion("replyTime between", value1, value2, "replytime");
            return (Criteria) this;
        }

        public Criteria andReplytimeNotBetween(Date value1, Date value2) {
            addCriterion("replyTime not between", value1, value2, "replytime");
            return (Criteria) this;
        }

        public Criteria andComplainstateIsNull() {
            addCriterion("complainState is null");
            return (Criteria) this;
        }

        public Criteria andComplainstateIsNotNull() {
            addCriterion("complainState is not null");
            return (Criteria) this;
        }

        public Criteria andComplainstateEqualTo(Integer value) {
            addCriterion("complainState =", value, "complainstate");
            return (Criteria) this;
        }

        public Criteria andComplainstateNotEqualTo(Integer value) {
            addCriterion("complainState <>", value, "complainstate");
            return (Criteria) this;
        }

        public Criteria andComplainstateGreaterThan(Integer value) {
            addCriterion("complainState >", value, "complainstate");
            return (Criteria) this;
        }

        public Criteria andComplainstateGreaterThanOrEqualTo(Integer value) {
            addCriterion("complainState >=", value, "complainstate");
            return (Criteria) this;
        }

        public Criteria andComplainstateLessThan(Integer value) {
            addCriterion("complainState <", value, "complainstate");
            return (Criteria) this;
        }

        public Criteria andComplainstateLessThanOrEqualTo(Integer value) {
            addCriterion("complainState <=", value, "complainstate");
            return (Criteria) this;
        }

        public Criteria andComplainstateIn(List<Integer> values) {
            addCriterion("complainState in", values, "complainstate");
            return (Criteria) this;
        }

        public Criteria andComplainstateNotIn(List<Integer> values) {
            addCriterion("complainState not in", values, "complainstate");
            return (Criteria) this;
        }

        public Criteria andComplainstateBetween(Integer value1, Integer value2) {
            addCriterion("complainState between", value1, value2, "complainstate");
            return (Criteria) this;
        }

        public Criteria andComplainstateNotBetween(Integer value1, Integer value2) {
            addCriterion("complainState not between", value1, value2, "complainstate");
            return (Criteria) this;
        }

        public Criteria andComplainresultIsNull() {
            addCriterion("complainResult is null");
            return (Criteria) this;
        }

        public Criteria andComplainresultIsNotNull() {
            addCriterion("complainResult is not null");
            return (Criteria) this;
        }

        public Criteria andComplainresultEqualTo(String value) {
            addCriterion("complainResult =", value, "complainresult");
            return (Criteria) this;
        }

        public Criteria andComplainresultNotEqualTo(String value) {
            addCriterion("complainResult <>", value, "complainresult");
            return (Criteria) this;
        }

        public Criteria andComplainresultGreaterThan(String value) {
            addCriterion("complainResult >", value, "complainresult");
            return (Criteria) this;
        }

        public Criteria andComplainresultGreaterThanOrEqualTo(String value) {
            addCriterion("complainResult >=", value, "complainresult");
            return (Criteria) this;
        }

        public Criteria andComplainresultLessThan(String value) {
            addCriterion("complainResult <", value, "complainresult");
            return (Criteria) this;
        }

        public Criteria andComplainresultLessThanOrEqualTo(String value) {
            addCriterion("complainResult <=", value, "complainresult");
            return (Criteria) this;
        }

        public Criteria andComplainresultLike(String value) {
            addCriterion("complainResult like", value, "complainresult");
            return (Criteria) this;
        }

        public Criteria andComplainresultNotLike(String value) {
            addCriterion("complainResult not like", value, "complainresult");
            return (Criteria) this;
        }

        public Criteria andComplainresultIn(List<String> values) {
            addCriterion("complainResult in", values, "complainresult");
            return (Criteria) this;
        }

        public Criteria andComplainresultNotIn(List<String> values) {
            addCriterion("complainResult not in", values, "complainresult");
            return (Criteria) this;
        }

        public Criteria andComplainresultBetween(String value1, String value2) {
            addCriterion("complainResult between", value1, value2, "complainresult");
            return (Criteria) this;
        }

        public Criteria andComplainresultNotBetween(String value1, String value2) {
            addCriterion("complainResult not between", value1, value2, "complainresult");
            return (Criteria) this;
        }

        public Criteria andFinishstateIsNull() {
            addCriterion("finishState is null");
            return (Criteria) this;
        }

        public Criteria andFinishstateIsNotNull() {
            addCriterion("finishState is not null");
            return (Criteria) this;
        }

        public Criteria andFinishstateEqualTo(Integer value) {
            addCriterion("finishState =", value, "finishstate");
            return (Criteria) this;
        }

        public Criteria andFinishstateNotEqualTo(Integer value) {
            addCriterion("finishState <>", value, "finishstate");
            return (Criteria) this;
        }

        public Criteria andFinishstateGreaterThan(Integer value) {
            addCriterion("finishState >", value, "finishstate");
            return (Criteria) this;
        }

        public Criteria andFinishstateGreaterThanOrEqualTo(Integer value) {
            addCriterion("finishState >=", value, "finishstate");
            return (Criteria) this;
        }

        public Criteria andFinishstateLessThan(Integer value) {
            addCriterion("finishState <", value, "finishstate");
            return (Criteria) this;
        }

        public Criteria andFinishstateLessThanOrEqualTo(Integer value) {
            addCriterion("finishState <=", value, "finishstate");
            return (Criteria) this;
        }

        public Criteria andFinishstateIn(List<Integer> values) {
            addCriterion("finishState in", values, "finishstate");
            return (Criteria) this;
        }

        public Criteria andFinishstateNotIn(List<Integer> values) {
            addCriterion("finishState not in", values, "finishstate");
            return (Criteria) this;
        }

        public Criteria andFinishstateBetween(Integer value1, Integer value2) {
            addCriterion("finishState between", value1, value2, "finishstate");
            return (Criteria) this;
        }

        public Criteria andFinishstateNotBetween(Integer value1, Integer value2) {
            addCriterion("finishState not between", value1, value2, "finishstate");
            return (Criteria) this;
        }

        public Criteria andComplainfinishIsNull() {
            addCriterion("complainFinish is null");
            return (Criteria) this;
        }

        public Criteria andComplainfinishIsNotNull() {
            addCriterion("complainFinish is not null");
            return (Criteria) this;
        }

        public Criteria andComplainfinishEqualTo(String value) {
            addCriterion("complainFinish =", value, "complainfinish");
            return (Criteria) this;
        }

        public Criteria andComplainfinishNotEqualTo(String value) {
            addCriterion("complainFinish <>", value, "complainfinish");
            return (Criteria) this;
        }

        public Criteria andComplainfinishGreaterThan(String value) {
            addCriterion("complainFinish >", value, "complainfinish");
            return (Criteria) this;
        }

        public Criteria andComplainfinishGreaterThanOrEqualTo(String value) {
            addCriterion("complainFinish >=", value, "complainfinish");
            return (Criteria) this;
        }

        public Criteria andComplainfinishLessThan(String value) {
            addCriterion("complainFinish <", value, "complainfinish");
            return (Criteria) this;
        }

        public Criteria andComplainfinishLessThanOrEqualTo(String value) {
            addCriterion("complainFinish <=", value, "complainfinish");
            return (Criteria) this;
        }

        public Criteria andComplainfinishLike(String value) {
            addCriterion("complainFinish like", value, "complainfinish");
            return (Criteria) this;
        }

        public Criteria andComplainfinishNotLike(String value) {
            addCriterion("complainFinish not like", value, "complainfinish");
            return (Criteria) this;
        }

        public Criteria andComplainfinishIn(List<String> values) {
            addCriterion("complainFinish in", values, "complainfinish");
            return (Criteria) this;
        }

        public Criteria andComplainfinishNotIn(List<String> values) {
            addCriterion("complainFinish not in", values, "complainfinish");
            return (Criteria) this;
        }

        public Criteria andComplainfinishBetween(String value1, String value2) {
            addCriterion("complainFinish between", value1, value2, "complainfinish");
            return (Criteria) this;
        }

        public Criteria andComplainfinishNotBetween(String value1, String value2) {
            addCriterion("complainFinish not between", value1, value2, "complainfinish");
            return (Criteria) this;
        }

        public Criteria andFinishtimeIsNull() {
            addCriterion("finishTime is null");
            return (Criteria) this;
        }

        public Criteria andFinishtimeIsNotNull() {
            addCriterion("finishTime is not null");
            return (Criteria) this;
        }

        public Criteria andFinishtimeEqualTo(Date value) {
            addCriterion("finishTime =", value, "finishtime");
            return (Criteria) this;
        }

        public Criteria andFinishtimeNotEqualTo(Date value) {
            addCriterion("finishTime <>", value, "finishtime");
            return (Criteria) this;
        }

        public Criteria andFinishtimeGreaterThan(Date value) {
            addCriterion("finishTime >", value, "finishtime");
            return (Criteria) this;
        }

        public Criteria andFinishtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("finishTime >=", value, "finishtime");
            return (Criteria) this;
        }

        public Criteria andFinishtimeLessThan(Date value) {
            addCriterion("finishTime <", value, "finishtime");
            return (Criteria) this;
        }

        public Criteria andFinishtimeLessThanOrEqualTo(Date value) {
            addCriterion("finishTime <=", value, "finishtime");
            return (Criteria) this;
        }

        public Criteria andFinishtimeIn(List<Date> values) {
            addCriterion("finishTime in", values, "finishtime");
            return (Criteria) this;
        }

        public Criteria andFinishtimeNotIn(List<Date> values) {
            addCriterion("finishTime not in", values, "finishtime");
            return (Criteria) this;
        }

        public Criteria andFinishtimeBetween(Date value1, Date value2) {
            addCriterion("finishTime between", value1, value2, "finishtime");
            return (Criteria) this;
        }

        public Criteria andFinishtimeNotBetween(Date value1, Date value2) {
            addCriterion("finishTime not between", value1, value2, "finishtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_complain
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_complain
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}