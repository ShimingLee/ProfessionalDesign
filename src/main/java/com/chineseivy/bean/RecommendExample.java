package com.chineseivy.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class RecommendExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_recommend
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_recommend
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_recommend
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    private Integer limit;

    private Integer offset;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_recommend
     *
     * @mbg.generated
     */
    public RecommendExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_recommend
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_recommend
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_recommend
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_recommend
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_recommend
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_recommend
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_recommend
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_recommend
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_recommend
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_recommend
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public Integer getLimit() {
        return limit;
    }

    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    public Integer getOffset() {
        return offset;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_recommend
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRecommendidIsNull() {
            addCriterion("recommendId is null");
            return (Criteria) this;
        }

        public Criteria andRecommendidIsNotNull() {
            addCriterion("recommendId is not null");
            return (Criteria) this;
        }

        public Criteria andRecommendidEqualTo(Integer value) {
            addCriterion("recommendId =", value, "recommendid");
            return (Criteria) this;
        }

        public Criteria andRecommendidNotEqualTo(Integer value) {
            addCriterion("recommendId <>", value, "recommendid");
            return (Criteria) this;
        }

        public Criteria andRecommendidGreaterThan(Integer value) {
            addCriterion("recommendId >", value, "recommendid");
            return (Criteria) this;
        }

        public Criteria andRecommendidGreaterThanOrEqualTo(Integer value) {
            addCriterion("recommendId >=", value, "recommendid");
            return (Criteria) this;
        }

        public Criteria andRecommendidLessThan(Integer value) {
            addCriterion("recommendId <", value, "recommendid");
            return (Criteria) this;
        }

        public Criteria andRecommendidLessThanOrEqualTo(Integer value) {
            addCriterion("recommendId <=", value, "recommendid");
            return (Criteria) this;
        }

        public Criteria andRecommendidIn(List<Integer> values) {
            addCriterion("recommendId in", values, "recommendid");
            return (Criteria) this;
        }

        public Criteria andRecommendidNotIn(List<Integer> values) {
            addCriterion("recommendId not in", values, "recommendid");
            return (Criteria) this;
        }

        public Criteria andRecommendidBetween(Integer value1, Integer value2) {
            addCriterion("recommendId between", value1, value2, "recommendid");
            return (Criteria) this;
        }

        public Criteria andRecommendidNotBetween(Integer value1, Integer value2) {
            addCriterion("recommendId not between", value1, value2, "recommendid");
            return (Criteria) this;
        }

        public Criteria andShopidIsNull() {
            addCriterion("shopId is null");
            return (Criteria) this;
        }

        public Criteria andShopidIsNotNull() {
            addCriterion("shopId is not null");
            return (Criteria) this;
        }

        public Criteria andShopidEqualTo(Integer value) {
            addCriterion("shopId =", value, "shopid");
            return (Criteria) this;
        }

        public Criteria andShopidNotEqualTo(Integer value) {
            addCriterion("shopId <>", value, "shopid");
            return (Criteria) this;
        }

        public Criteria andShopidGreaterThan(Integer value) {
            addCriterion("shopId >", value, "shopid");
            return (Criteria) this;
        }

        public Criteria andShopidGreaterThanOrEqualTo(Integer value) {
            addCriterion("shopId >=", value, "shopid");
            return (Criteria) this;
        }

        public Criteria andShopidLessThan(Integer value) {
            addCriterion("shopId <", value, "shopid");
            return (Criteria) this;
        }

        public Criteria andShopidLessThanOrEqualTo(Integer value) {
            addCriterion("shopId <=", value, "shopid");
            return (Criteria) this;
        }

        public Criteria andShopidIn(List<Integer> values) {
            addCriterion("shopId in", values, "shopid");
            return (Criteria) this;
        }

        public Criteria andShopidNotIn(List<Integer> values) {
            addCriterion("shopId not in", values, "shopid");
            return (Criteria) this;
        }

        public Criteria andShopidBetween(Integer value1, Integer value2) {
            addCriterion("shopId between", value1, value2, "shopid");
            return (Criteria) this;
        }

        public Criteria andShopidNotBetween(Integer value1, Integer value2) {
            addCriterion("shopId not between", value1, value2, "shopid");
            return (Criteria) this;
        }

        public Criteria andRecommendthemeIsNull() {
            addCriterion("recommendTheme is null");
            return (Criteria) this;
        }

        public Criteria andRecommendthemeIsNotNull() {
            addCriterion("recommendTheme is not null");
            return (Criteria) this;
        }

        public Criteria andRecommendthemeEqualTo(String value) {
            addCriterion("recommendTheme =", value, "recommendtheme");
            return (Criteria) this;
        }

        public Criteria andRecommendthemeNotEqualTo(String value) {
            addCriterion("recommendTheme <>", value, "recommendtheme");
            return (Criteria) this;
        }

        public Criteria andRecommendthemeGreaterThan(String value) {
            addCriterion("recommendTheme >", value, "recommendtheme");
            return (Criteria) this;
        }

        public Criteria andRecommendthemeGreaterThanOrEqualTo(String value) {
            addCriterion("recommendTheme >=", value, "recommendtheme");
            return (Criteria) this;
        }

        public Criteria andRecommendthemeLessThan(String value) {
            addCriterion("recommendTheme <", value, "recommendtheme");
            return (Criteria) this;
        }

        public Criteria andRecommendthemeLessThanOrEqualTo(String value) {
            addCriterion("recommendTheme <=", value, "recommendtheme");
            return (Criteria) this;
        }

        public Criteria andRecommendthemeLike(String value) {
            addCriterion("recommendTheme like", value, "recommendtheme");
            return (Criteria) this;
        }

        public Criteria andRecommendthemeNotLike(String value) {
            addCriterion("recommendTheme not like", value, "recommendtheme");
            return (Criteria) this;
        }

        public Criteria andRecommendthemeIn(List<String> values) {
            addCriterion("recommendTheme in", values, "recommendtheme");
            return (Criteria) this;
        }

        public Criteria andRecommendthemeNotIn(List<String> values) {
            addCriterion("recommendTheme not in", values, "recommendtheme");
            return (Criteria) this;
        }

        public Criteria andRecommendthemeBetween(String value1, String value2) {
            addCriterion("recommendTheme between", value1, value2, "recommendtheme");
            return (Criteria) this;
        }

        public Criteria andRecommendthemeNotBetween(String value1, String value2) {
            addCriterion("recommendTheme not between", value1, value2, "recommendtheme");
            return (Criteria) this;
        }

        public Criteria andRecommendtextIsNull() {
            addCriterion("recommendText is null");
            return (Criteria) this;
        }

        public Criteria andRecommendtextIsNotNull() {
            addCriterion("recommendText is not null");
            return (Criteria) this;
        }

        public Criteria andRecommendtextEqualTo(String value) {
            addCriterion("recommendText =", value, "recommendtext");
            return (Criteria) this;
        }

        public Criteria andRecommendtextNotEqualTo(String value) {
            addCriterion("recommendText <>", value, "recommendtext");
            return (Criteria) this;
        }

        public Criteria andRecommendtextGreaterThan(String value) {
            addCriterion("recommendText >", value, "recommendtext");
            return (Criteria) this;
        }

        public Criteria andRecommendtextGreaterThanOrEqualTo(String value) {
            addCriterion("recommendText >=", value, "recommendtext");
            return (Criteria) this;
        }

        public Criteria andRecommendtextLessThan(String value) {
            addCriterion("recommendText <", value, "recommendtext");
            return (Criteria) this;
        }

        public Criteria andRecommendtextLessThanOrEqualTo(String value) {
            addCriterion("recommendText <=", value, "recommendtext");
            return (Criteria) this;
        }

        public Criteria andRecommendtextLike(String value) {
            addCriterion("recommendText like", value, "recommendtext");
            return (Criteria) this;
        }

        public Criteria andRecommendtextNotLike(String value) {
            addCriterion("recommendText not like", value, "recommendtext");
            return (Criteria) this;
        }

        public Criteria andRecommendtextIn(List<String> values) {
            addCriterion("recommendText in", values, "recommendtext");
            return (Criteria) this;
        }

        public Criteria andRecommendtextNotIn(List<String> values) {
            addCriterion("recommendText not in", values, "recommendtext");
            return (Criteria) this;
        }

        public Criteria andRecommendtextBetween(String value1, String value2) {
            addCriterion("recommendText between", value1, value2, "recommendtext");
            return (Criteria) this;
        }

        public Criteria andRecommendtextNotBetween(String value1, String value2) {
            addCriterion("recommendText not between", value1, value2, "recommendtext");
            return (Criteria) this;
        }

        public Criteria andRecommendstarttimeIsNull() {
            addCriterion("recommendStartTime is null");
            return (Criteria) this;
        }

        public Criteria andRecommendstarttimeIsNotNull() {
            addCriterion("recommendStartTime is not null");
            return (Criteria) this;
        }

        public Criteria andRecommendstarttimeEqualTo(Date value) {
            addCriterion("recommendStartTime =", value, "recommendstarttime");
            return (Criteria) this;
        }

        public Criteria andRecommendstarttimeNotEqualTo(Date value) {
            addCriterion("recommendStartTime <>", value, "recommendstarttime");
            return (Criteria) this;
        }

        public Criteria andRecommendstarttimeGreaterThan(Date value) {
            addCriterion("recommendStartTime >", value, "recommendstarttime");
            return (Criteria) this;
        }

        public Criteria andRecommendstarttimeGreaterThanOrEqualTo(Date value) {
            addCriterion("recommendStartTime >=", value, "recommendstarttime");
            return (Criteria) this;
        }

        public Criteria andRecommendstarttimeLessThan(Date value) {
            addCriterion("recommendStartTime <", value, "recommendstarttime");
            return (Criteria) this;
        }

        public Criteria andRecommendstarttimeLessThanOrEqualTo(Date value) {
            addCriterion("recommendStartTime <=", value, "recommendstarttime");
            return (Criteria) this;
        }

        public Criteria andRecommendstarttimeIn(List<Date> values) {
            addCriterion("recommendStartTime in", values, "recommendstarttime");
            return (Criteria) this;
        }

        public Criteria andRecommendstarttimeNotIn(List<Date> values) {
            addCriterion("recommendStartTime not in", values, "recommendstarttime");
            return (Criteria) this;
        }

        public Criteria andRecommendstarttimeBetween(Date value1, Date value2) {
            addCriterion("recommendStartTime between", value1, value2, "recommendstarttime");
            return (Criteria) this;
        }

        public Criteria andRecommendstarttimeNotBetween(Date value1, Date value2) {
            addCriterion("recommendStartTime not between", value1, value2, "recommendstarttime");
            return (Criteria) this;
        }

        public Criteria andRecommendendtimeIsNull() {
            addCriterion("recommendEndTime is null");
            return (Criteria) this;
        }

        public Criteria andRecommendendtimeIsNotNull() {
            addCriterion("recommendEndTime is not null");
            return (Criteria) this;
        }

        public Criteria andRecommendendtimeEqualTo(Date value) {
            addCriterion("recommendEndTime =", value, "recommendendtime");
            return (Criteria) this;
        }

        public Criteria andRecommendendtimeNotEqualTo(Date value) {
            addCriterion("recommendEndTime <>", value, "recommendendtime");
            return (Criteria) this;
        }

        public Criteria andRecommendendtimeGreaterThan(Date value) {
            addCriterion("recommendEndTime >", value, "recommendendtime");
            return (Criteria) this;
        }

        public Criteria andRecommendendtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("recommendEndTime >=", value, "recommendendtime");
            return (Criteria) this;
        }

        public Criteria andRecommendendtimeLessThan(Date value) {
            addCriterion("recommendEndTime <", value, "recommendendtime");
            return (Criteria) this;
        }

        public Criteria andRecommendendtimeLessThanOrEqualTo(Date value) {
            addCriterion("recommendEndTime <=", value, "recommendendtime");
            return (Criteria) this;
        }

        public Criteria andRecommendendtimeIn(List<Date> values) {
            addCriterion("recommendEndTime in", values, "recommendendtime");
            return (Criteria) this;
        }

        public Criteria andRecommendendtimeNotIn(List<Date> values) {
            addCriterion("recommendEndTime not in", values, "recommendendtime");
            return (Criteria) this;
        }

        public Criteria andRecommendendtimeBetween(Date value1, Date value2) {
            addCriterion("recommendEndTime between", value1, value2, "recommendendtime");
            return (Criteria) this;
        }

        public Criteria andRecommendendtimeNotBetween(Date value1, Date value2) {
            addCriterion("recommendEndTime not between", value1, value2, "recommendendtime");
            return (Criteria) this;
        }

        public Criteria andRecommendimgIsNull() {
            addCriterion("recommendImg is null");
            return (Criteria) this;
        }

        public Criteria andRecommendimgIsNotNull() {
            addCriterion("recommendImg is not null");
            return (Criteria) this;
        }

        public Criteria andRecommendimgEqualTo(String value) {
            addCriterion("recommendImg =", value, "recommendimg");
            return (Criteria) this;
        }

        public Criteria andRecommendimgNotEqualTo(String value) {
            addCriterion("recommendImg <>", value, "recommendimg");
            return (Criteria) this;
        }

        public Criteria andRecommendimgGreaterThan(String value) {
            addCriterion("recommendImg >", value, "recommendimg");
            return (Criteria) this;
        }

        public Criteria andRecommendimgGreaterThanOrEqualTo(String value) {
            addCriterion("recommendImg >=", value, "recommendimg");
            return (Criteria) this;
        }

        public Criteria andRecommendimgLessThan(String value) {
            addCriterion("recommendImg <", value, "recommendimg");
            return (Criteria) this;
        }

        public Criteria andRecommendimgLessThanOrEqualTo(String value) {
            addCriterion("recommendImg <=", value, "recommendimg");
            return (Criteria) this;
        }

        public Criteria andRecommendimgLike(String value) {
            addCriterion("recommendImg like", value, "recommendimg");
            return (Criteria) this;
        }

        public Criteria andRecommendimgNotLike(String value) {
            addCriterion("recommendImg not like", value, "recommendimg");
            return (Criteria) this;
        }

        public Criteria andRecommendimgIn(List<String> values) {
            addCriterion("recommendImg in", values, "recommendimg");
            return (Criteria) this;
        }

        public Criteria andRecommendimgNotIn(List<String> values) {
            addCriterion("recommendImg not in", values, "recommendimg");
            return (Criteria) this;
        }

        public Criteria andRecommendimgBetween(String value1, String value2) {
            addCriterion("recommendImg between", value1, value2, "recommendimg");
            return (Criteria) this;
        }

        public Criteria andRecommendimgNotBetween(String value1, String value2) {
            addCriterion("recommendImg not between", value1, value2, "recommendimg");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_recommend
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_recommend
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}