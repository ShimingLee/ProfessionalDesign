package com.chineseivy.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class LogisticsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_logistics
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_logistics
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_logistics
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    private Integer limit;

    private Integer offset;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_logistics
     *
     * @mbg.generated
     */
    public LogisticsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_logistics
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_logistics
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_logistics
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_logistics
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_logistics
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_logistics
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_logistics
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_logistics
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_logistics
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_logistics
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public Integer getLimit() {
        return limit;
    }

    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    public Integer getOffset() {
        return offset;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_logistics
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andShopidIsNull() {
            addCriterion("shopId is null");
            return (Criteria) this;
        }

        public Criteria andShopidIsNotNull() {
            addCriterion("shopId is not null");
            return (Criteria) this;
        }

        public Criteria andShopidEqualTo(Integer value) {
            addCriterion("shopId =", value, "shopid");
            return (Criteria) this;
        }

        public Criteria andShopidNotEqualTo(Integer value) {
            addCriterion("shopId <>", value, "shopid");
            return (Criteria) this;
        }

        public Criteria andShopidGreaterThan(Integer value) {
            addCriterion("shopId >", value, "shopid");
            return (Criteria) this;
        }

        public Criteria andShopidGreaterThanOrEqualTo(Integer value) {
            addCriterion("shopId >=", value, "shopid");
            return (Criteria) this;
        }

        public Criteria andShopidLessThan(Integer value) {
            addCriterion("shopId <", value, "shopid");
            return (Criteria) this;
        }

        public Criteria andShopidLessThanOrEqualTo(Integer value) {
            addCriterion("shopId <=", value, "shopid");
            return (Criteria) this;
        }

        public Criteria andShopidIn(List<Integer> values) {
            addCriterion("shopId in", values, "shopid");
            return (Criteria) this;
        }

        public Criteria andShopidNotIn(List<Integer> values) {
            addCriterion("shopId not in", values, "shopid");
            return (Criteria) this;
        }

        public Criteria andShopidBetween(Integer value1, Integer value2) {
            addCriterion("shopId between", value1, value2, "shopid");
            return (Criteria) this;
        }

        public Criteria andShopidNotBetween(Integer value1, Integer value2) {
            addCriterion("shopId not between", value1, value2, "shopid");
            return (Criteria) this;
        }

        public Criteria andOrderidIsNull() {
            addCriterion("orderId is null");
            return (Criteria) this;
        }

        public Criteria andOrderidIsNotNull() {
            addCriterion("orderId is not null");
            return (Criteria) this;
        }

        public Criteria andOrderidEqualTo(Integer value) {
            addCriterion("orderId =", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidNotEqualTo(Integer value) {
            addCriterion("orderId <>", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidGreaterThan(Integer value) {
            addCriterion("orderId >", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidGreaterThanOrEqualTo(Integer value) {
            addCriterion("orderId >=", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidLessThan(Integer value) {
            addCriterion("orderId <", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidLessThanOrEqualTo(Integer value) {
            addCriterion("orderId <=", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidIn(List<Integer> values) {
            addCriterion("orderId in", values, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidNotIn(List<Integer> values) {
            addCriterion("orderId not in", values, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidBetween(Integer value1, Integer value2) {
            addCriterion("orderId between", value1, value2, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidNotBetween(Integer value1, Integer value2) {
            addCriterion("orderId not between", value1, value2, "orderid");
            return (Criteria) this;
        }

        public Criteria andLogisticsidIsNull() {
            addCriterion("logisticsId is null");
            return (Criteria) this;
        }

        public Criteria andLogisticsidIsNotNull() {
            addCriterion("logisticsId is not null");
            return (Criteria) this;
        }

        public Criteria andLogisticsidEqualTo(Integer value) {
            addCriterion("logisticsId =", value, "logisticsid");
            return (Criteria) this;
        }

        public Criteria andLogisticsidNotEqualTo(Integer value) {
            addCriterion("logisticsId <>", value, "logisticsid");
            return (Criteria) this;
        }

        public Criteria andLogisticsidGreaterThan(Integer value) {
            addCriterion("logisticsId >", value, "logisticsid");
            return (Criteria) this;
        }

        public Criteria andLogisticsidGreaterThanOrEqualTo(Integer value) {
            addCriterion("logisticsId >=", value, "logisticsid");
            return (Criteria) this;
        }

        public Criteria andLogisticsidLessThan(Integer value) {
            addCriterion("logisticsId <", value, "logisticsid");
            return (Criteria) this;
        }

        public Criteria andLogisticsidLessThanOrEqualTo(Integer value) {
            addCriterion("logisticsId <=", value, "logisticsid");
            return (Criteria) this;
        }

        public Criteria andLogisticsidIn(List<Integer> values) {
            addCriterion("logisticsId in", values, "logisticsid");
            return (Criteria) this;
        }

        public Criteria andLogisticsidNotIn(List<Integer> values) {
            addCriterion("logisticsId not in", values, "logisticsid");
            return (Criteria) this;
        }

        public Criteria andLogisticsidBetween(Integer value1, Integer value2) {
            addCriterion("logisticsId between", value1, value2, "logisticsid");
            return (Criteria) this;
        }

        public Criteria andLogisticsidNotBetween(Integer value1, Integer value2) {
            addCriterion("logisticsId not between", value1, value2, "logisticsid");
            return (Criteria) this;
        }

        public Criteria andLogisticsstateIsNull() {
            addCriterion("logisticsState is null");
            return (Criteria) this;
        }

        public Criteria andLogisticsstateIsNotNull() {
            addCriterion("logisticsState is not null");
            return (Criteria) this;
        }

        public Criteria andLogisticsstateEqualTo(Integer value) {
            addCriterion("logisticsState =", value, "logisticsstate");
            return (Criteria) this;
        }

        public Criteria andLogisticsstateNotEqualTo(Integer value) {
            addCriterion("logisticsState <>", value, "logisticsstate");
            return (Criteria) this;
        }

        public Criteria andLogisticsstateGreaterThan(Integer value) {
            addCriterion("logisticsState >", value, "logisticsstate");
            return (Criteria) this;
        }

        public Criteria andLogisticsstateGreaterThanOrEqualTo(Integer value) {
            addCriterion("logisticsState >=", value, "logisticsstate");
            return (Criteria) this;
        }

        public Criteria andLogisticsstateLessThan(Integer value) {
            addCriterion("logisticsState <", value, "logisticsstate");
            return (Criteria) this;
        }

        public Criteria andLogisticsstateLessThanOrEqualTo(Integer value) {
            addCriterion("logisticsState <=", value, "logisticsstate");
            return (Criteria) this;
        }

        public Criteria andLogisticsstateIn(List<Integer> values) {
            addCriterion("logisticsState in", values, "logisticsstate");
            return (Criteria) this;
        }

        public Criteria andLogisticsstateNotIn(List<Integer> values) {
            addCriterion("logisticsState not in", values, "logisticsstate");
            return (Criteria) this;
        }

        public Criteria andLogisticsstateBetween(Integer value1, Integer value2) {
            addCriterion("logisticsState between", value1, value2, "logisticsstate");
            return (Criteria) this;
        }

        public Criteria andLogisticsstateNotBetween(Integer value1, Integer value2) {
            addCriterion("logisticsState not between", value1, value2, "logisticsstate");
            return (Criteria) this;
        }

        public Criteria andLogisticslocationIsNull() {
            addCriterion("logisticsLocation is null");
            return (Criteria) this;
        }

        public Criteria andLogisticslocationIsNotNull() {
            addCriterion("logisticsLocation is not null");
            return (Criteria) this;
        }

        public Criteria andLogisticslocationEqualTo(String value) {
            addCriterion("logisticsLocation =", value, "logisticslocation");
            return (Criteria) this;
        }

        public Criteria andLogisticslocationNotEqualTo(String value) {
            addCriterion("logisticsLocation <>", value, "logisticslocation");
            return (Criteria) this;
        }

        public Criteria andLogisticslocationGreaterThan(String value) {
            addCriterion("logisticsLocation >", value, "logisticslocation");
            return (Criteria) this;
        }

        public Criteria andLogisticslocationGreaterThanOrEqualTo(String value) {
            addCriterion("logisticsLocation >=", value, "logisticslocation");
            return (Criteria) this;
        }

        public Criteria andLogisticslocationLessThan(String value) {
            addCriterion("logisticsLocation <", value, "logisticslocation");
            return (Criteria) this;
        }

        public Criteria andLogisticslocationLessThanOrEqualTo(String value) {
            addCriterion("logisticsLocation <=", value, "logisticslocation");
            return (Criteria) this;
        }

        public Criteria andLogisticslocationLike(String value) {
            addCriterion("logisticsLocation like", value, "logisticslocation");
            return (Criteria) this;
        }

        public Criteria andLogisticslocationNotLike(String value) {
            addCriterion("logisticsLocation not like", value, "logisticslocation");
            return (Criteria) this;
        }

        public Criteria andLogisticslocationIn(List<String> values) {
            addCriterion("logisticsLocation in", values, "logisticslocation");
            return (Criteria) this;
        }

        public Criteria andLogisticslocationNotIn(List<String> values) {
            addCriterion("logisticsLocation not in", values, "logisticslocation");
            return (Criteria) this;
        }

        public Criteria andLogisticslocationBetween(String value1, String value2) {
            addCriterion("logisticsLocation between", value1, value2, "logisticslocation");
            return (Criteria) this;
        }

        public Criteria andLogisticslocationNotBetween(String value1, String value2) {
            addCriterion("logisticsLocation not between", value1, value2, "logisticslocation");
            return (Criteria) this;
        }

        public Criteria andLogisticstimeIsNull() {
            addCriterion("logisticsTime is null");
            return (Criteria) this;
        }

        public Criteria andLogisticstimeIsNotNull() {
            addCriterion("logisticsTime is not null");
            return (Criteria) this;
        }

        public Criteria andLogisticstimeEqualTo(Date value) {
            addCriterion("logisticsTime =", value, "logisticstime");
            return (Criteria) this;
        }

        public Criteria andLogisticstimeNotEqualTo(Date value) {
            addCriterion("logisticsTime <>", value, "logisticstime");
            return (Criteria) this;
        }

        public Criteria andLogisticstimeGreaterThan(Date value) {
            addCriterion("logisticsTime >", value, "logisticstime");
            return (Criteria) this;
        }

        public Criteria andLogisticstimeGreaterThanOrEqualTo(Date value) {
            addCriterion("logisticsTime >=", value, "logisticstime");
            return (Criteria) this;
        }

        public Criteria andLogisticstimeLessThan(Date value) {
            addCriterion("logisticsTime <", value, "logisticstime");
            return (Criteria) this;
        }

        public Criteria andLogisticstimeLessThanOrEqualTo(Date value) {
            addCriterion("logisticsTime <=", value, "logisticstime");
            return (Criteria) this;
        }

        public Criteria andLogisticstimeIn(List<Date> values) {
            addCriterion("logisticsTime in", values, "logisticstime");
            return (Criteria) this;
        }

        public Criteria andLogisticstimeNotIn(List<Date> values) {
            addCriterion("logisticsTime not in", values, "logisticstime");
            return (Criteria) this;
        }

        public Criteria andLogisticstimeBetween(Date value1, Date value2) {
            addCriterion("logisticsTime between", value1, value2, "logisticstime");
            return (Criteria) this;
        }

        public Criteria andLogisticstimeNotBetween(Date value1, Date value2) {
            addCriterion("logisticsTime not between", value1, value2, "logisticstime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_logistics
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_logistics
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}